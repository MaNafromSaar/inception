version: '3.8'

services:
  # Nginx Service (Reverse Proxy)
  nginx:
    container_name: nginx
    image: nginx # Image name must be the same as the service name
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
      # Example: To mount SSL certs if not copied in Dockerfile, or for live config changes
      # - ./requirements/nginx/conf:/etc/nginx/conf.d
      # - ./secrets/ssl:/etc/nginx/ssl # Assuming certs are in secrets/ssl
      - wp_files:/var/www/html # Nginx might need access to serve static files directly or check existence
    networks:
      - inception_network
    depends_on:
      wordpress:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "service", "nginx", "status", "||", "exit", "1"]
      interval: 15s
      timeout: 5s
      retries: 3
    env_file:
      - .env

  # WordPress Service
  wordpress:
    container_name: wordpress
    image: wordpress # Image name must be the same as the service name
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - wp_files:/var/www/html
    networks:
      - inception_network
    depends_on:
      mariadb:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pgrep", "php-fpm7.4"]
      interval: 15s
      timeout: 5s
      retries: 3

  # MariaDB Service
  mariadb:
    container_name: mariadb
    image: mariadb # Image name must be the same as the service name
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - inception_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 15s
      timeout: 5s
      retries: 3
    env_file:
      - .env

volumes:
  wp_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      # IMPORTANT: Replace 'mnaumann' with your actual login
      # These directories must exist on your VM:
      # sudo mkdir -p /home/mnaumann/data/wordpress
      # sudo chown -R youruser:yourgroup /home/mnaumann/data/wordpress (adjust user/group)
      device: /home/mnaumann/data/wordpress # Path on the host VM
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      # IMPORTANT: Replace 'mnaumann' with your actual login
      # These directories must exist on your VM:
      # sudo mkdir -p /home/mnaumann/data/mariadb
      # sudo chown -R youruser:yourgroup /home/mnaumann/data/mariadb (adjust user/group)
      device: /home/mnaumann/data/mariadb # Path on the host VM

networks:
  inception_network:
    driver: bridge
    name: inception_network # Explicitly naming the network
