# Use the penultimate stable version of Debian: Bullseye (Debian 11)
FROM debian:bullseye-slim

# Environment variables (can be overridden by docker-compose)
# DOMAIN_NAME will be sourced from .env by docker-compose and used by entrypoint script
# ENV DOMAIN_NAME=mnaumann.42.fr # No need to set it here if entrypoint handles it from .env

LABEL maintainer="mnaumann@student.42.fr" \
      project="Inception - Nginx"

# Install Nginx and OpenSSL (for cert generation if done in container, or for `openssl` tool)
# Add gettext-base for envsubst
RUN apt-get update && \
    apt-get install -y nginx openssl gettext-base && \
    rm -rf /var/lib/apt/lists/*

# Remove default Nginx configuration
RUN rm -f /etc/nginx/sites-enabled/default \
    && rm -f /etc/nginx/sites-available/default \
    && rm -f /etc/nginx/nginx.conf # Or just overwrite it

# Copy custom Nginx configuration
COPY ./conf/nginx.conf /etc/nginx/nginx.conf
# If you have separate site configs:
# COPY ./conf/default.conf /etc/nginx/conf.d/default.conf

# Create directory for SSL certificates.
# Certificates are generated by the entrypoint script.
RUN mkdir -p /etc/nginx/ssl

COPY ./tools/generate_ssl.sh /usr/local/bin/generate_ssl.sh
COPY ./tools/nginx_entrypoint.sh /usr/local/bin/nginx_entrypoint.sh
RUN chmod +x /usr/local/bin/generate_ssl.sh /usr/local/bin/nginx_entrypoint.sh

# Expose HTTPS port
EXPOSE 443

# Volume for Nginx logs (optional, Docker logs are usually sufficient)
# VOLUME /var/log/nginx

# Healthcheck (Optional)
# HEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD curl --fail --silent --insecure https://localhost/ || exit 1

ENTRYPOINT ["/usr/local/bin/nginx_entrypoint.sh"]

# Command to run Nginx in the foreground
CMD ["nginx", "-g", "daemon off;"]
